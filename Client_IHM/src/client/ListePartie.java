/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import static client.Communication.get;
import static client.Communication.post;
import static client.Communication.sendTurn;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import org.json.JSONObject;

/**
 *
 * @author florian
 */
public class ListePartie extends javax.swing.JFrame {

    private String user;
    private String password;
    private String serveur;
    private int[] id;
    private int taille;
    private String[] nomPartie;
    private boolean victoire = true;
    

    /**
     * Creates new form ListePartie
     *
     * @param user
     * @param password
     */
    public ListePartie(String user, String password,String serveur) {
        initComponents();
        this.user = user;
        this.password = password;
        this.serveur = serveur;

        String result;
        try {
            result = get(serveur+"/games", user, password);
        } catch (IOException e) {
            result = e.getMessage();
        }
        System.out.println(result);

        LecteurListeGame list = new LecteurListeGame(result);

        taille = list.getTaille();

        id = new int[taille];
        nomPartie = new String[taille];

        id = list.getId();
        nomPartie = list.getNomPartie();

        DefaultListModel listModel = new DefaultListModel();

        for (int i = 0; i < taille; i++) {
            listModel.addElement(nomPartie[i]+";"+Integer.toString(id[i]) );
            System.out.println(nomPartie[i]+";"+Integer.toString(id[i]) );
        }

        jList1.setModel(listModel);

        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton2.setText("Jouer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("Pseudo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            TestSerial2 com = new TestSerial2();

            String game = jList1.getSelectedValue().toString();
            
            int index = game.indexOf(";");
            String idGame = game.substring(index+1);
            
            String pseudo= jTextField1.getText();
            String result;
            
            JSONObject obj = new JSONObject();
            obj.put("username", pseudo);
            String jsonText = obj.toString();
            
             try {
                result = post(serveur+"/games/" + idGame + "/players", user, password,jsonText);
            } catch (IOException e) {
                result = e.getMessage();
            }
            
            try {
                result = get(serveur+"/game/" + idGame, user, password);
            } catch (IOException e) {
                result = e.getMessage();
            }
            System.out.println(result);

            LecteurJson lec = new LecteurJson();

            lec.Lecture(result);

            InterfaceJeux i = new InterfaceJeux(user, password, idGame, com, lec,serveur);

            i.setVisible(true);
            i.pack();
            this.setVisible(false);
            

            //Mettre en commentaire pour utiliser les flÃªches
            Thread communicaton = new Thread() {
                public void run() {
                    try {
                        
                        while(victoire == true){
                        sendTurn(lec, user, password, idGame, com,pseudo,serveur);
                        String result;
                        result = get(serveur+"/game/" + idGame, user, password);
                        System.out.println(result);

                        lec.Lecture(result);

                        i.printMap(lec, user, password, idGame);
                        
                        if (lec.getStatus()=="CLOSED"){
                            victoire = false;
                        }
                        }
                        
                        System.out.println("Fin de partie");
                        com.envoieMessage("STOP");
                        com.close();
                        i.setVisible(false);
                    } catch (Exception ex) {
                        Logger.getLogger(ListePartie.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            };
            communicaton.start();

        } catch (Exception ex) {
            Logger.getLogger(ListePartie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListePartie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListePartie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListePartie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListePartie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                /*new ListePartie().setVisible(true);*/
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
